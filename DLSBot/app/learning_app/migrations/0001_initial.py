# Generated by Django 4.2.20 on 2025-04-23 15:33

import django_ckeditor_5.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Направление программы обучения',
                'verbose_name_plural': 'Направления программ обучения',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='NewsBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('news_title', models.CharField(default='Новости', max_length=100, verbose_name='Наименование')),
                ('start_date_news', models.DateField(verbose_name='Дата старта новости')),
                ('end_date_news', models.DateField(blank=True, null=True, verbose_name='Дата завершения новости')),
                ('text_news', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Текст новости')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news', verbose_name='Изображение новости')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-start_date_news'],
            },
        ),
        migrations.CreateModel(
            name='TagCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('tag_name', models.CharField(max_length=255, verbose_name='Наименование тега')),
            ],
            options={
                'verbose_name': 'Тег программы',
                'verbose_name_plural': 'Теги программ',
            },
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('archive', models.BooleanField(default=False, verbose_name='Архивный')),
                ('title', models.CharField(max_length=400, verbose_name='Заголовок')),
                ('author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Автор')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('min_test_percent_course', models.IntegerField(default=90, verbose_name='Минимальный процент для прохождения курса')),
                ('image_course', models.ImageField(blank=True, null=True, upload_to='training_course', verbose_name='Изображение для курса')),
                ('course_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='learning_app.coursedirection', verbose_name='Направление программы обучения')),
                ('group', models.ManyToManyField(blank=True, to='bot.telegramgroup', verbose_name='Группа пользователей')),
                ('tag', models.ManyToManyField(blank=True, to='learning_app.tagcourse', verbose_name='Тэги')),
                ('user', models.ManyToManyField(blank=True, to='bot.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Программа обучения',
                'verbose_name_plural': 'Программы обучения',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TopicQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
                ('title', models.CharField(max_length=500, verbose_name='Текст вопроса')),
                ('is_multiple_choice', models.BooleanField(default=False, verbose_name='Несколько вариантов ответа')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ['training', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ScormPack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('scorm_file', models.FileField(upload_to='scorm_packs/', verbose_name='SCORM пакет')),
                ('manifest_data', models.JSONField(blank=True, null=True, verbose_name='Манифест для веб')),
                ('training_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scormpack', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
            ],
            options={
                'verbose_name': 'SCORM пакет',
                'verbose_name_plural': 'SCORM пакеты',
            },
        ),
        migrations.CreateModel(
            name='RatingTrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('rating', models.IntegerField(verbose_name='Оценка')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.telegramuser', verbose_name='Студент')),
                ('training_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_course', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
            ],
            options={
                'verbose_name': 'Рейтинг программы',
                'verbose_name_plural': 'Рейтинги программ',
            },
        ),
        migrations.CreateModel(
            name='CourseTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('main_text', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Основной текст')),
                ('image_course_topic', models.ImageField(blank=True, null=True, upload_to='Course_Topic', verbose_name='Изображение для темы курса')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='Course_Topic/pdf', verbose_name='PDF файл для курса')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='Course_Topic/audio', verbose_name='Аудио файл для курса')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='Course_Topic/video', verbose_name='Видео файл для курса')),
                ('main_text_readuser', models.BooleanField(default=False, verbose_name='Отображать основной текст в ТГ')),
                ('main_text_webapp_readuser', models.BooleanField(default=False, verbose_name='Отображать основной текст в ТГ в формате WebApp')),
                ('pdf_file_readuser', models.BooleanField(default=False, verbose_name='Отображать PDF файл в ТГ')),
                ('audio_file_readuser', models.BooleanField(default=False, verbose_name='Отображать аудио файл в ТГ')),
                ('video_file_readuser', models.BooleanField(default=False, verbose_name='Отображать видео файл в ТГ')),
                ('training_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_topics', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
            ],
            options={
                'verbose_name': 'Тема программы обучения',
                'verbose_name_plural': 'Темы программы обучения',
                'ordering': ['training_course', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CourseDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('deadline_date', models.DateField(verbose_name='Дата дедлайна')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='Уведомление отправлено')),
                ('deadline_groups', models.ManyToManyField(blank=True, related_name='deadlines', to='bot.telegramgroup', verbose_name='Группы')),
                ('deadline_users', models.ManyToManyField(blank=True, related_name='deadlines', to='bot.telegramuser', verbose_name='Студенты')),
                ('training_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deadlines', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
            ],
            options={
                'verbose_name': 'Дедлайн',
                'verbose_name_plural': 'Дедлайны',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('result', models.IntegerField(verbose_name='Результат')),
                ('certificate_file', models.FileField(blank=True, upload_to='certificates/', verbose_name='Адрес файла')),
                ('training_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='learning_app.trainingcourse', verbose_name='Программа обучения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='bot.telegramuser', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Сертификат',
                'verbose_name_plural': 'Сертификаты',
            },
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('is_actual', models.BooleanField(default=True, verbose_name='Is actual')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
                ('text', models.TextField(verbose_name='Текст ответа')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('topic_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_options', to='learning_app.topicquestion', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
                'ordering': ['topic_question', 'order'],
            },
        ),
    ]
