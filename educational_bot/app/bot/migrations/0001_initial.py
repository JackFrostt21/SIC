# Generated by Django 4.2.3 on 2024-10-17 05:51

import app.bot.models.testing_module
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SetsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='id')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='title')),
                ('tag', models.CharField(blank=True, max_length=50, null=True, verbose_name='tag')),
            ],
            options={
                'verbose_name': 'settings',
                'verbose_name_plural': 'settings',
                'db_table': 'settings',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SetsListParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='id')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='title')),
                ('tag', models.CharField(blank=True, max_length=50, null=True, verbose_name='tag')),
                ('value', models.CharField(blank=True, max_length=200, verbose_name='value')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='settings/uploads_photo', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'sets parameter',
                'verbose_name_plural': 'sets parameters',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TelegramGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование группы')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'TelegramGroup',
                'verbose_name_plural': 'TelegramGroups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('state', models.IntegerField(choices=[(0, 'NOT_ACTIVE'), (1, 'ACTIVE'), (2, 'DELETED')], default=0, null=True, verbose_name='state')),
                ('user_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID пользователя')),
                ('user_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram имя пользователя ')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='ФИО')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.CharField(blank=True, max_length=100, null=True, verbose_name='Дата рождения')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Телефон')),
                ('language', models.CharField(blank=True, max_length=20, null=True, verbose_name='Язык')),
                ('tg_mention', models.CharField(blank=True, max_length=100, null=True, verbose_name='tg_mention')),
                ('testing_process', models.BooleanField(default=False, verbose_name='testing_process')),
                ('current_question_index', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'TelegramUser',
                'verbose_name_plural': "TelegramUser's",
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=100, null=True, verbose_name='User')),
                ('action_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Type of Action')),
                ('action_details', models.TextField(blank=True, null=True, verbose_name='Action Details')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('action_text', models.TextField(blank=True, default='', null=True, verbose_name='Action Text')),
            ],
            options={
                'verbose_name': 'User Action',
                'verbose_name_plural': 'User Actions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('state', models.IntegerField(choices=[(0, 'NOT_ACTIVE'), (1, 'ACTIVE'), (2, 'DELETED')], default=0, null=True, verbose_name='state')),
                ('user_answer', models.JSONField(default=app.bot.models.testing_module.default_user_answer, verbose_name='Ответы пользователя')),
                ('complete', models.BooleanField(default=False, verbose_name='Успешно')),
                ('quantity_correct', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Процент правильных ответов')),
                ('quantity_not_correct', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Процент не правильных ответов')),
            ],
            options={
                'verbose_name': 'Тест пользователя',
                'verbose_name_plural': 'Тесты пользователей',
            },
        ),
    ]
