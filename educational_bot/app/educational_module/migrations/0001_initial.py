# Generated by Django 4.2.3 on 2024-10-17 05:51

import ckeditor.fields
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('logo_company', models.ImageField(blank=True, null=True, upload_to='company', verbose_name='Логотип компании')),
                ('color_theme_company', colorfield.fields.ColorField(default='#4a8bed', image_field=None, max_length=25, samples=None, verbose_name='Основной цвет компании')),
                ('image_start_company', models.ImageField(blank=True, null=True, upload_to='start_images', verbose_name='Стартовое изображение для ТГ')),
                ('image_list_courses', models.ImageField(blank=True, null=True, upload_to='list_courses', verbose_name='Изображение для списка курсов в ТГ')),
                ('image_list_settings', models.ImageField(blank=True, null=True, upload_to='list_settings', verbose_name='Изображение для настроек в ТГ')),
                ('image_progress', models.ImageField(blank=True, null=True, upload_to='image_progress', verbose_name='Изображение для прогресса в ТГ')),
                ('image_test_passed', models.ImageField(blank=True, null=True, upload_to='test passed', verbose_name='Изображение для успешно пройденного теста')),
                ('image_test_failed', models.ImageField(blank=True, null=True, upload_to='test failed', verbose_name='Изображение для неудачно пройденного теста')),
                ('image_test_start', models.ImageField(blank=True, null=True, upload_to='start_images', verbose_name='Стартовое изображение для теста')),
                ('spravka_for_bot', models.TextField(blank=True, null=True, verbose_name='Описание бота для справки')),
                ('version_bot', models.TextField(blank=True, null=True, verbose_name='Версия бота')),
                ('image_spravka_for_bot', models.ImageField(blank=True, null=True, upload_to='start_images', verbose_name='Изображение для справки о боте')),
                ('image_progess_good', models.ImageField(blank=True, null=True, upload_to='test passed', verbose_name='Позитивное изображение для прогресса')),
                ('image_progess_bad', models.ImageField(blank=True, null=True, upload_to='test failed', verbose_name='Негативное изображение для прогресса')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CourseDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Направление программы обучения',
                'verbose_name_plural': 'Направления программ обучения',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='CourseTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('title', models.CharField(blank=True, max_length=13, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('main_text', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Основной текст')),
                ('image_course_topic', models.ImageField(blank=True, null=True, upload_to='Course_Topic', verbose_name='Изображение для темы курса')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='Course_Topic', verbose_name='PDF файл для курса')),
                ('main_text_readuser', models.BooleanField(default=False, verbose_name='Отображать основной текст в ТГ')),
                ('main_text_webapp_readuser', models.BooleanField(default=False, verbose_name='Отображать основной текст в ТГ в формате WebApp')),
                ('pdf_file_readuser', models.BooleanField(default=False, verbose_name='Отображать PDF файл в ТГ')),
            ],
            options={
                'verbose_name': 'Тема курса',
                'verbose_name_plural': 'Темы курса',
                'ordering': ['training_course', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('archive', models.BooleanField(default=False, verbose_name='Архивный')),
                ('title', models.CharField(blank=True, max_length=400, null=True, verbose_name='Заголовок')),
                ('author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Автор')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('min_test_percent_course', models.IntegerField(default=90, verbose_name='Минимальный процент для прохождения курса')),
                ('image_course', models.ImageField(blank=True, null=True, upload_to='training_course', verbose_name='Изображение для курса')),
                ('course_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='educational_module.coursedirection', verbose_name='Направление программы обучения')),
                ('group', models.ManyToManyField(blank=True, to='bot.telegramgroup', verbose_name='Группа пользователей')),
                ('user', models.ManyToManyField(blank=True, to='bot.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Курс самоподготовки',
                'verbose_name_plural': 'Курсы самоподготовки',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TopicQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Заголовок')),
                ('is_multiple_choice', models.BooleanField(default=False, verbose_name='Несколько ответов')),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('training', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='educational_module.trainingcourse', verbose_name='курс')),
            ],
            options={
                'verbose_name': 'Вопрос по теме',
                'verbose_name_plural': 'Вопросы по темам',
                'ordering': ['training'],
            },
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('main_text', models.TextField(blank=True, null=True, verbose_name='Основной текст')),
                ('course_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='topic_subtopic', to='educational_module.coursetopic', verbose_name='тема курса')),
            ],
            options={
                'verbose_name': 'Под-тема',
                'verbose_name_plural': 'Под-темы',
                'ordering': ['course_topic', 'id'],
            },
        ),
        migrations.AddField(
            model_name='coursetopic',
            name='training_course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='course_topics', to='educational_module.trainingcourse', verbose_name='курс самоподготовки'),
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='internal_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_at')),
                ('is_actual', models.BooleanField(default=False, verbose_name='Отобразить')),
                ('number', models.CharField(blank=True, max_length=5, null=True, verbose_name='порядковый номер')),
                ('text', models.TextField(blank=True, null=True, verbose_name='текст')),
                ('is_correct', models.BooleanField(default=False, verbose_name='верно')),
                ('topic_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer_options', to='educational_module.topicquestion', verbose_name='вопрос по теме')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
                'ordering': ['id', 'number'],
            },
        ),
    ]
